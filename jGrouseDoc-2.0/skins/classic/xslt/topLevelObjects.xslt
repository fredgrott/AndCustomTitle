<!-- 
	jGrouseDoc template file. Brief summary of top-level objects (classes, functions, etc) 
		- shown in left bottom frame
	@Copyright (c) 2007 by Denis Riabtchik. All rights reserved. See license.txt and http://jgrouse.com for details@
	$Id: topLevelObjects.xslt 249 2007-11-12 00:51:31Z denis.riabtchik $
-->

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	version="1.0">
	<xsl:param name='rootPath' />
	<xsl:param name='version'/>
    <xsl:param name='aux_css'>not_specified</xsl:param>
		
	
	<xsl:output method='HTML' doctype-public="-//W3C//DTD HTML 4.01//EN"
		doctype-system="http://www.w3.org/TR/html4/strict.dtd">
	</xsl:output>
	<xsl:import href="../../common/xslt/common.xslt"/>
	
	<xsl:template match="/">
		<xsl:comment>Generated by jGrouseDoc</xsl:comment>
		<html>
		    <head>
                <xsl:call-template name="writeCss">
                     <xsl:with-param name="rootPath"><xsl:value-of select="$rootPath"/></xsl:with-param>
                     <xsl:with-param name="aux_css"><xsl:value-of select="$aux_css"/></xsl:with-param>
                 </xsl:call-template>
			</head>
			<body>
			    <div class="topLevelObjects">
				<div class="overviewTitle">All Top-Level Elements</div>
				<div class="overview">
				<xsl:for-each select="/jgdoc/items/*[name() = 'class' or name() = 'struct' or name() = 'object' or name() = 'interface' or name() = 'function'  or name() = 'ifunction']">
				    <xsl:variable name="parentName"><xsl:value-of select="@parentName"/></xsl:variable>
                    <xsl:sort select="@localName"/>
				    <xsl:if test="(count(/jgdoc/items/namespace[@id=$parentName]) != 0)">
				    <xsl:element name="div">
				        <xsl:attribute name="class"><xsl:value-of select="name()"/></xsl:attribute>
						<xsl:element name="a">
							<xsl:attribute name="href">
                                <xsl:call-template name="writeLink">
                                    <xsl:with-param name="refName"><xsl:value-of select="@id"/></xsl:with-param>
                                </xsl:call-template>
							</xsl:attribute>
							<xsl:attribute name="target">classFrame</xsl:attribute>
							<xsl:attribute name="title"><xsl:value-of select="name()"/> <xsl:text> </xsl:text> <xsl:value-of select="@id"/></xsl:attribute>
							<xsl:value-of select="@localName"/>
						</xsl:element>
					</xsl:element>
					</xsl:if>
				</xsl:for-each>	
				</div>
			    </div>
			</body>
		</html>
	</xsl:template>



</xsl:stylesheet>
