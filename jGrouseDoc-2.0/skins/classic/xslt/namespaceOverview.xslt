<!-- 
	jGrouseDoc template file. Brief summary of file's contents - shown in bottom-left frame
	@Copyright (c) 2007 by Denis Riabtchik. All rights reserved. See license.txt and http://jgrouse.com for details@
	$Id: namespaceOverview.xslt 249 2007-11-12 00:51:31Z denis.riabtchik $
-->

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	version="1.0">
	<xsl:param name='objectName' />
    <xsl:param name='objectType' />
	<xsl:param name='rootPath' />
	<xsl:param name='version'/>	
    <xsl:param name='aux_css'>not_specified</xsl:param>
	
	<xsl:output method='HTML' doctype-public="-//W3C//DTD HTML 4.01//EN"
		doctype-system="http://www.w3.org/TR/html4/strict.dtd">

	</xsl:output>
	<xsl:import href="../../common/xslt/common.xslt"/>

	<xsl:template match="/">
		<xsl:comment>Generated by jGrouseDoc</xsl:comment>
		<xsl:apply-templates select="/jgdoc/items/*[@id=$objectName]"/>
	</xsl:template>
	
	<xsl:template match="/jgdoc/items/*">
		<html>
		    <head>
                <xsl:call-template name="writeCss">
                     <xsl:with-param name="rootPath"><xsl:value-of select="$rootPath"/></xsl:with-param>
                     <xsl:with-param name="aux_css"><xsl:value-of select="$aux_css"/></xsl:with-param>
                 </xsl:call-template>
			</head>
			<body>
			    <div class="logicalOverview">
				<xsl:element name="a">
					<xsl:attribute name="href"><xsl:value-of select="$rootPath"/>logical/<xsl:value-of select="@path"/>.html</xsl:attribute>
					<xsl:attribute name="target">classFrame</xsl:attribute>
					<xsl:value-of select="@id"/>
				</xsl:element>
				<xsl:element name='br' />
				<!--============== Build top level summaries ===================== -->

                <!-- Interfaces -->
                <xsl:apply-templates select="children" mode="writeRefOverview">
                    <xsl:with-param name="elementType">interface</xsl:with-param>
                    <xsl:with-param  name="elementName">Interfaces</xsl:with-param>
                </xsl:apply-templates>

				<!-- classes -->
                <xsl:apply-templates select="children" mode="writeRefOverview">
                    <xsl:with-param name="elementType">class</xsl:with-param>
                    <xsl:with-param  name="elementName">Classes</xsl:with-param>
                </xsl:apply-templates>

                <!-- classes -->
                <xsl:apply-templates select="children" mode="writeRefOverview">
                    <xsl:with-param name="elementType">object</xsl:with-param>
                    <xsl:with-param  name="elementName">Objects</xsl:with-param>
                </xsl:apply-templates>


                <!-- structs -->
                <xsl:apply-templates select="children" mode="writeRefOverview">
                    <xsl:with-param name="elementType">struct</xsl:with-param>
                    <xsl:with-param  name="elementName">Structures</xsl:with-param>
                </xsl:apply-templates>

                <!-- variables -->
                <xsl:apply-templates select="children" mode="writeRefOverview">
                    <xsl:with-param name="elementType">variable</xsl:with-param>
                    <xsl:with-param  name="elementName">Variables</xsl:with-param>
                </xsl:apply-templates>
				

                <!-- functions-->
                <xsl:apply-templates select="children" mode="writeRefOverview">
                    <xsl:with-param name="elementType">function</xsl:with-param>
                    <xsl:with-param  name="elementName">Functions</xsl:with-param>
                </xsl:apply-templates>

                <!-- function interfaces-->
                <xsl:apply-templates select="children" mode="writeRefOverview">
                    <xsl:with-param name="elementType">ifunction</xsl:with-param>
                    <xsl:with-param  name="elementName">Function Interfaces</xsl:with-param>
                </xsl:apply-templates>

				</div>
			</body>
		</html>
	</xsl:template>



</xsl:stylesheet>
